Complexity
Time complexity: O(n * n!)

Code
class Solution {
    List<List<Integer>> result = new ArrayList<>();
    public void backtrack(List<Integer> temp ,int[] nums){
        int n = nums.length;
        if(temp.size()==n){
            result.add(new ArrayList<>(temp));
            return;
        }
        for(int i=0;i<n;i++){
            if(!temp.contains(nums[i])){  //if temp does not contain that element already
                temp.add(nums[i]);
                backtrack(temp, nums);
                temp.remove(temp.size()-1);  // Remove the last added element
            }
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        List<Integer> temp = new ArrayList<>();
        backtrack(temp, nums);
        return result;
    }
}
